{
    "askSignature": false,
    "askFor": "method",
    "nameAsk": "bissextile",
    "tests":[
        {
            "test": "bissextile(2016)",
            "expected": true,
            "errorFeedback": "2016 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(2015)",
            "expected": false,
            "errorFeedback": "2015 is not a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(1990)",
            "expected": false,
            "errorFeedback": "1990 is not a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(2000)",
            "expected": true,
            "errorFeedback": "2000 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(1900)",
            "expected": false,
            "errorFeedback": "1990 is not a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(2042)",
            "expected": false,
            "errorFeedback": "2042 is not a leap but your code returns the opposite"
        },
        {
            "test": "bissextile(2020)",
            "expected": true,
            "errorFeedback": "2020 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(2024)",
            "expected": true,
            "errorFeedback": "2024 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(2028)",
            "expected": true,
            "errorFeedback": "2028 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(2032)",
            "expected": true,
            "errorFeedback": "2032 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(100)",
            "expected": false,
            "errorFeedback": "100 is not a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(400)",
            "expected": true,
            "errorFeedback": "400 is a leap year but your code returns the opposite"
        },
        {
            "test": "bissextile(4)",
            "expected": true,
            "errorFeedback": "4 is a leap year but your code returns the opposite"
        }
    ]
}
